name: CI/CD for Test Environment

on:
  push:
    branches:
      - develop

jobs:
  # Job para build en develop
  build_develop:
    runs-on: ubuntu-latest
    steps:
      # 1. Clona el repositorio
      - name: Checkout code
        uses: actions/checkout@v2

      # 2. Configura Node.js y PNPM
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: lts/*

      - name: Setup pnpm
        run: corepack enable

      # 3. Instala dependencias y genera la aplicaci√≥n
      - name: Install dependencies and build
        env:
          NUXT_ENV: test
          NUXT_PUBLIC_TEST_URL: http://devp.thecallpro.com/api
        run: |
          pnpm install --frozen-lockfile
          pnpm generate -o .output/public

      # 4. Guarda los artefactos generados
      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: nuxt-output
          path: .output/public

  # Job para deploy en develop
  deploy_to_test:
    runs-on: ubuntu-latest
    needs: build_develop
    steps:
      # 1. Descarga los artefactos generados
      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: nuxt-output

      # 2. Instala Firebase CLI
      - name: Install Firebase CLI
        run: npm install -g firebase-tools
      
      # 3. Debugging: Lista archivos y verifica firebase.json
      - name: Debugging Verify firebase.json
        run: |
          echo "Current directory:"
          pwd
          echo "Root files:"
          ls -la

      # 3. Realiza el despliegue en Firebase Hosting
      - name: Deploy to Firebase Hosting
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
        run: firebase deploy --only hosting:test-thecallproportal --token $FIREBASE_TOKEN
